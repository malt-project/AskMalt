# The AskMalt Programming Language Grammar

Expr
	::= Number
	|	String
	|	Symbol
	|	Tuple
	|	EQuote
	|	'(' RExpr ')'
	;

RExpr
	::=	Let
	|	Cond
	|	Match
	|	Defun
	|	Lambda
	|	Quote
	|	FCall
	;

Let ::= "let" Expr Expr ;

Cond ::= "cond" Tuple+ ;

Match ::= "match" Expr Tuple+ ;

Defun ::= "fun" Symbol '(' (Name)+ ')' (Expr)+ ;

Lambda ::= '\\' '(' (Name)+ ')' (Expr)+ ;

FCall ::= (Expr)+ ;

Quote ::= "quote" (Expr)+ ;

Tuple ::= '[' (Expr)+ ']' ;

Symbol := r"[^\0.]" ;

String := r"\"(.)+(\n)+(.)*(\n)+\"" ;

//Number := r"/b+" ;
/*
std::wregex fr(L"-?[0-9]*(\\.)[0-9]*.");
std::wregex ir(L"(-|\\+)[0-9]*.");
std::wregex uir(L"[0-9]*.");
*/

Float := r"-?[0-9]*(\.)[0-9]*."
Int := r"(-|\+)[0-9]*."
UInt := r"[0-9]*."